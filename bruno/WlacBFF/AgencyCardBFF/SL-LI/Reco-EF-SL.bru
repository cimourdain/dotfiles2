meta {
  name: Reco-EF-SL
  type: http
  seq: 3
}

get {
  url: {{WLAC_BFF_URL}}/v1/recommendation/estimation_funnel/SL?livingSurface={{livingSurface}}&lat=48.87481671088&lng=2.3184923&price={{price}}&propertyType={{propertyType}}&legacyAddressId={{legacyAddressId}}&estimationId={{estimationId}}
  body: none
  auth: none
}

query {
  livingSurface: {{livingSurface}}
  lat: 48.87481671088
  lng: 2.3184923
  price: {{price}}
  propertyType: {{propertyType}}
  legacyAddressId: {{legacyAddressId}}
  estimationId: {{estimationId}}
  ~activeLanguage: {{activeLanguage}}
}

script:pre-request {
  if (!bru.getVar('legacyAddressId')){
    bru.setVar('legacyAddressId', '110299')
  }
}

script:post-response {
  if (res.getStatus() != 200 ) {
      bru.setNextRequest(null);
      return
  } else {
      // select a random agency from response to set legacyBrandId for following contact request
    const data = res.getBody();
    const agenciesCount = (data.agencies.length - 1)
    const randomAgencyIndex = faker.number.int({ min: 0, max: agenciesCount }) ;
    const randomLIAgencyLegacyId = data.agencies[randomAgencyIndex].legacyBrandId;
    bru.setVar("legacyBrandId", randomLIAgencyLegacyId);
  }
}

tests {
  
  test("should contains a list of agencies", function() {
    testRecoHasAgenciesCount(5);
  });
}
