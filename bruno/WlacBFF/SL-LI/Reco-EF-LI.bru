meta {
  name: Reco-EF-LI
  type: http
  seq: 5
}

get {
  url: {{BFF_URL}}/v1/recommendation/estimation_funnel/LI?livingSurface={{livingSurface}}&lat=48.87481671088&lng=2.3184923&price={{price}}&propertyType={{propertyType}}&legacyAddressId={{legacyAddressId}}&estimationId={{estimationId}}
  body: none
  auth: none
}

query {
  livingSurface: {{livingSurface}}
  lat: 48.87481671088
  lng: 2.3184923
  price: {{price}}
  propertyType: {{propertyType}}
  legacyAddressId: {{legacyAddressId}}
  estimationId: {{estimationId}}
  ~activeLanguage: {{activeLanguage}}
}

script:pre-request {
  
  
}

script:post-response {
  const {faker} = require('@faker-js/faker');
  
  const data = res.getBody();
  const agenciesCount = (data.agencies.length - 1)
  const randomAgencyIndex = faker.number.int({ min: 0, max: agenciesCount }) ;
  const randomLIAgencyLegacyId = data.agencies[randomAgencyIndex].legacyBrandId;
  bru.setVar("legacyBrandId", randomLIAgencyLegacyId);
}

tests {
  test("should return 200", function() {
    const data = res.getBody();
    expect(res.getStatus()).to.equal(200);
  });
   
  test("should contains a list of agencies", function() {
    const data = res.getBody();
    expect(data).have.property('agencies');
    expect(data.agencies).to.have.lengthOf.above(5, 'Less than 5 agencies in response, it is suspicious');
  });
}
