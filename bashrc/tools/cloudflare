#!/bin/bash

# Install
# $ yay -S cloudflare-warp-bin
# $ sudo systemctl start warp-svc
# $ warp-cli registration new
# $ warp-cli teams-enroll aviv-group

current_dir=$(dirname $(realpath ${HOME}/.bashrc))
repo_root_dir=$(dirname $current_dir)

source "${current_dir}/tools/dns"
source "${repo_root_dir}/bash_utils/systemctl"


# Start cloudFlare
CLOUDFLARE_SERVICE_NAME=warp-svc

CLOUDFLARE_DOCKER_DAEMON_JSON="$(cat <<EOF
{
    "default-address-pools":
    [
        {"base":"192.168.254.0/24","size":28, "mtu": 1420}
    ],
    "dns": ["1.1.1.1", "1.0.0.1"]
}
EOF
)"

# "default-address-pools":
# [
#     {
#         "base" : "172.17.0.0/12",
#         "size" : 16
#     },
#     {
#         "base" : "192.168.0.0/16",
#         "size" : 20
#     }
# ]
DEFAULT_DOCKER_DAEMON_JSON="$(cat <<EOF
{}
EOF
)"


# function verify_cloudflare_docker_config {
#     echo >&2 "🐳 Check Docker configuration"
#     echo >&2 "💡https://avivgroup.atlassian.net/wiki/x/nYCOLw"

#     local docker_daemon_config_file_path="/etc/docker/daemon.json"
#     local expected_docker_daemon_json="$(cat <<EOF
# {
#     "default-address-pools":
#     [
#         {"base":"192.168.254.0/24","size":28, "mtu": 1420}
#     ],
#     "dns": ["8.8.8.8", "1.1.1.1"]
# }
# EOF
#     )"

#     local expected_docker_config=$(jq --sort-keys '.' <<< "${expected_docker_daemon_json}")

#     local diff=$(diff <(echo "${expected_docker_config}") <(jq --sort-keys . "${docker_daemon_config_file_path}" ))

#     if [ "${diff}" != "" ];then
#         echo >&2 "⚠️ The ${docker_daemon_config_file_path} file does not comply with the expected configuration"

#         echo >&2 "Differences found are: "
#         echo >&2 "${diff}"

#         echo >&2 "💡 Expected ${docker_daemon_config_file_path} content: "
#         echo >&2 "${expected_docker_daemon_json}"
#     else
#         echo >&2 "✅ The ${docker_daemon_config_file_path} comply with the expected configuration"
#     fi
# }

update_docker_configuration() {
    echo >&2 "🐳 Update Docker configuration"
    echo >&2 "💡https://avivgroup.atlassian.net/wiki/x/nYCOLw"

    local docker_daemon_config="${1}"

    echo >&2 "👷 Update /etc/docker/daemon.json file"
    echo "${docker_daemon_config}" | sudo tee /etc/docker/daemon.json

    echo >&2 "👓 Verify the content of the daemon config file"
    cat /etc/docker/daemon.json

    echo >&2 "🚓 Stop all docker containers"
    docker stop "$(docker ps -a -q)"
	docker rm "$(docker ps -a -q)"

    echo >&2 "💀 Delete docker networks"
    docker network prune

    echo >&2 "🚀 Restart docker service"
    sudo systemctl restart docker.service
}

cfs() {
    start_service ${CLOUDFLARE_SERVICE_NAME}

    echo >&2 "⏰ Wait for Daemon ${CLOUDFLARE_SERVICE_NAME} to start"
    sleep 2

    local warp_cli_settings=$(warp-cli settings)
    if [ "$?" != "0" ];then
        echo >&2 "👧 Connect"
        warp-cli connect
    else
        echo >&2 "✅ Warp Client already connected"
    fi

    update_docker_configuration "${CLOUDFLARE_DOCKER_DAEMON_JSON}"

    echo >&2 "🔀 Use Cloudflare DNS"
    set_dns "cloudflare"

    echo >&2 "🔀 Flush DNS Cache"
    sudo resolvectl flush-caches
    # echo >&2 "🔀 Use Google DNS"
    # set_dns "google"
}

cfk() {
    # Stop cloudFlare
    sudo systemctl stop ${CLOUDFLARE_SERVICE_NAME}

    echo >&2 "🔀 Reset DNS to default"
    set_dns

    # update_docker_configuration "${DEFAULT_DOCKER_DAEMON_JSON}"
}